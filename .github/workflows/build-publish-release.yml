name: Publish to Maven Repositories

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: macos-15  # 使用 macOS 以支持 iOS 构建
    env:
      XCODE_VERSION: '16.4'  # 设置 Xcode 版本
      IOS_SDK_VERSION: '18.5'  # 设置 iOS SDK 版本


    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive  # 递归初始化子模块

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: 'gradle'

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '4.0.3'

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r28b
          link-to-sdk: true
          local-cache: true

      - name: Clean Gradle caches
        run: |
          rm -rf ~/.gradle/caches/
          rm -rf ~/.gradle/daemon/

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-disabled: true

      - name: Validate Gradle Wrapper
        run: ./gradlew --version

      - name: Configure Xcode environment
        run: |
          sudo xcode-select --switch /Applications/Xcode_${{ env.XCODE_VERSION }}.app/Contents/Developer
          xcode-select --print-path
          echo "DEVELOPER_DIR=/Applications/Xcode_${{ env.XCODE_VERSION }}.app/Contents/Developer" >> $GITHUB_ENV
          # 验证编译器路径
          xcrun --find clang
          xcrun --find clang++
          # 验证SDK路径
          xcrun --show-sdk-path --sdk iphoneos
          xcrun --show-sdk-path --sdk iphonesimulator


      - name: Build FreeType iOS libraries
        run: |
          cd external/freetype
          chmod +x build-ios-cmake.sh
          # 确保环境变量正确设置
          export DEVELOPER_DIR=/Applications/Xcode_${{ env.XCODE_VERSION }}.app/Contents/Developer
          export CC=$(xcrun --find clang)
          export CXX=$(xcrun --find clang++)
          # 显示调试信息
          echo "Current directory: $(pwd)"
          echo "CC: $CC"
          echo "CXX: $CXX"
          echo "DEVELOPER_DIR: $DEVELOPER_DIR"
          ./build-ios-cmake.sh "Release" "Xcode_${{ env.XCODE_VERSION }}" "${{ env.IOS_SDK_VERSION }}"

      - name: Get tag name
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          set -x
          echo "VERSION_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ env.VERSION_TAG }}
          name: KotlinTex ${{ env.VERSION_TAG }}
          body: |
            Release ${{ env.VERSION_TAG }}
          draft: true
          prerelease: false

      - name: Publish to GitHub Packages And Maven Central
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_USERNAME: ${{ github.actor }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.ORG_GRADLE_PROJECT_mavenCentralUsername }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.ORG_GRADLE_PROJECT_mavenCentralPassword }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.ORG_GRADLE_PROJECT_signingInMemoryKeyId }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.ORG_GRADLE_PROJECT_signingInMemoryKeyPassword }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ORG_GRADLE_PROJECT_signingInMemoryKey }}
        run: |
          ./gradlew publishAllPublicationsToGitHubPackagesRepository \
            -PGitHubPackagesUsername=$GITHUB_USERNAME \
            -PGitHubPackagesPassword=$GITHUB_TOKEN
          ./gradlew publishToMavenCentral
